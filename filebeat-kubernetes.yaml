apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: filebeat
  namespace: kube-system
  labels:
    k8s-app: filebeat
spec:
  template:
    metadata:
      labels:
        k8s-app: filebeat
    spec:
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      containers:
      - name: filebeat
        image: thecase/k8s-logzio-filebeat:latest
        env:
        - name: LOGSTASH_HOST
          value: listener.logz.io:5015
        - name: LOGZIO_TOKEN
          valueFrom: 
            secretKeyRef:
              name: logzio
              key: token
        - name: CERT
          value: '/var/secrets/COMODORSADomainValidationSecureServerCA.crt'
        securityContext:
          runAsUser: 0
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: containers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: docker
          mountPath: /var/run/docker.sock
          readOnly: true
        - name: data
          mountPath: /usr/share/filebeat/data
        - name: config
          mountPath: /etc/docker-gen
        - name: logzio-secrets
          mountPath: /var/secrets
          readOnly: true
      volumes:
      - name: containers
        hostPath:
          path: /var/lib/docker/containers
      - name: docker
        hostPath:
          path: /var/run/docker.sock
      - name: data
        emptyDir: {}
      - name: config
        configMap:
          name: filebeat
      - name: logzio-secrets
        secret:
          secretName: logzio
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: filebeat
  labels:
    k8s-app: filebeat
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - watch
  - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: kube-system
  labels:
    k8s-app: filebeat
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat
  namespace: kube-system
data:
  filebeat.tmpl: |
    {{/* this is a docker-gen template. See docker-gen for more details */}}
    filebeat:
      prospectors:
      {{ range $key, $value := . }}
        -
          paths:
            - /var/lib/docker/containers/{{ $value.ID }}/{{ $value.ID }}-json.log
          document_type: docker
          ignore_older: 30m
          scan_frequency: 5s
          json.keys_under_root: true
          json.message_key: log
          fields_under_root: true
          fields:
            logzio_codec: json
            token: {{ $.Env.LOGZIO_TOKEN }}
            type: docker
            docker/id: {{ $value.ID }}
            docker/image: {{ if $value.Image.Registry }}{{ $value.Image.Registry }}/{{ end }}{{ $value.Image.Repository }}{{ if $value.Image.Tag }}:{{ $value.Image.Tag }}{{ else }}:latest{{ end }}
            docker/name: {{ $value.Name }}
            docker/hostname: {{ $value.Hostname }}
            {{ range $k, $v := $value.Labels }}
            docker/label/{{ $k }}: {{ $v }}
            {{ end }}
      {{ end }}

    processors:
     - rename:
        fields:
         - from: "log"
           to: "message"
        ignore_missing: false
        fail_on_error: true 
     - decode_json_fields:
         fields: ["docker/label/annotation.io.kubernetes.container.ports"]

    output.logstash:
      hosts: [ "{{ .Env.LOGSTASH_HOST }}" ]

      {{ if .Env.CERT }}
      ssl:
        certificate_authorities: ["{{ $.Env.CERT }}"]
      {{ end }} 

    logging:
      level: info
